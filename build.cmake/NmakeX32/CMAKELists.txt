#-------------------------------------------------------------------------------------
cmake_minimum_required(VERSION 3.15)
# Toolchain File

# The target of this operating systems is 
SET(CMAKE_SYSTEM_NAME Windows)

# here is the target environment located
SET(CMAKE_FIND_ROOT_PATH  "C:/Program Files/Microsoft Visual Studio/$ENV{VS_VERSION}/Community/VC/Tools/MSVC/$ENV{VS_NUM}/bin/Hostx86/x86" )

# which compilers to use for C and C++
SET(CMAKE_C_COMPILER "C:/Program Files/Microsoft Visual Studio/$ENV{VS_VERSION}/Community/VC/Tools/MSVC/$ENV{VS_NUM}/bin/Hostx86/x86/cl.exe" )
# SET(CMAKE_CXX_COMPILER "C:/Program Files/Microsoft Visual Studio/$ENV{VS_VERSION}/Community/VC/Tools/MSVC/$ENV{VS_NUM}/bin/Hostx86/x86/cl.exe" )
SET(CMAKE_RC_COMPILER "C:/Program Files (x86)/Windows Kits/$ENV{KIT_WIN_VERSION}/bin/$ENV{KIT_WIN_NUM}/x86/rc.exe" )
# SET(CMAKE_CXX_EXTENSIONS ON)

# set(CMAKE_C_COMPILER "cl.exe")
# set(CMAKE_CXX_COMPILER "cl.exe")
# set(CMAKE_RC_COMPILER "rc.exe")

message(STATUS "Setting MSVC flags to NMAKE 32 bits")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} /TC")
# set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} /TP /std:c++latest")
# set(CMAKE_LINK_FLAGS "${CMAKE_LINK_FLAGS} /MACHINE:X86 "/LIBPATH=C:\\Program Files\\Microsoft Visual Studio\\2022\\Community\\VC\\Tools\\MSVC\\14.33.31629\\lib\\x86" "/LIBPATH=C:\\Program Files (x86)\\Windows Kits\\10\\Lib\\10.0.22621.0\\um\\x86" ")
set(CMAKE_LINK_FLAGS "${CMAKE_LINK_FLAGS} /MACHINE:X86 /SUBSYSTEM:WINDOWS")
include_directories(BEFORE "C:/Program Files (x86)/Windows Kits/$ENV{KIT_WIN_VERSION}/Include/$ENV{KIT_WIN_NUM}/um" "C:/Program Files (x86)/Windows Kits/$ENV{KIT_WIN_VERSION}/Include/$ENV{KIT_WIN_NUM}/shared" "C:/Program Files (x86)/Windows Kits/$ENV{KIT_WIN_VERSION}/Include/$ENV{KIT_WIN_NUM}/ucrt" "C:/Program Files/Microsoft Visual Studio/$ENV{VS_VERSION}/Community/VC/Tools/MSVC/$ENV{VS_NUM}/include")

if(${CMAKE_BUILD_TYPE} MATCHES Debug)
    message("CMAKE Debug Build for NMAKE included in Visual C/C++ 32 bits")
	set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} /Zi /DDEBUG /D_DEBUG")
	set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/binVS2022X32/Debug")
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/binVS2022X32/Debug")
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/binVS2022X32/Debug")
#	set(CMAKE_EXE_LINKER_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS_DEBUG} -llibstdc++")	
elseif(${CMAKE_BUILD_TYPE} MATCHES Release)
    message("CMAKE Release Build for NMAKE included in Visual C/C++ 32 bits")
	set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} /DNDEBUG")
	set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/binVS2022X32/Release")
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/binVS2022X32/Release")
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/binVS2022X32/Release")
#	set(CMAKE_EXE_LINKER_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS_DEBUG} -llibstdc++")	
endif()

file(GLOB SRC_FILES src/*.c src/*.rc)
# set(APPLI ${NAME_APPLI})

project(${NAME_APPLI}
        VERSION 1.0.0
        LANGUAGES C)
add_executable(${PROJECT_NAME} WIN32 ${SRC_FILES})

target_link_directories(${PROJECT_NAME} PUBLIC "C:/Program Files (x86)/Windows Kits/$ENV{KIT_WIN_VERSION}/Lib/$ENV{KIT_WIN_NUM}/um/x86" "C:/Program Files (x86)/Windows Kits/$ENV{KIT_WIN_VERSION}/Lib/$ENV{KIT_WIN_NUM}/ucrt/x86" "C:/Program Files/Microsoft Visual Studio/$ENV{VS_VERSION}/Community/VC/Tools/MSVC/$ENV{VS_NUM}/lib/x86")
target_link_libraries(${PROJECT_NAME} PUBLIC "glu32.lib" "opengl32.lib" "user32.lib" "advapi32.lib" "comdlg32.lib" "winmm.lib" "gdi32.lib" "shell32.lib" "kernel32.lib")
#-------------------------------------------------------------------------------------
