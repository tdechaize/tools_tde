#-------------------------------------------------------------------------------------
cmake_minimum_required(VERSION 3.9.1)
# Toolchain File

# The target of this operating systems is 
SET(CMAKE_SYSTEM_NAME Windows)
set(CMAKE_CXX_EXTENSIONS  ON)

# here is the target environment located
SET(CMAKE_FIND_ROOT_PATH  "C:/BCC55/bin" )

# which compilers to use for C and C++
SET(CMAKE_C_COMPILER "C:/BCC55/bin/bcc32.exe" )
SET(CMAKE_CXX_COMPILER "C:/BCC55/bin/bcc32.exe" )
SET(CMAKE_RC_COMPILER "C:/BCC55/bin/brc32.exe" )

message(STATUS "Setting BCC flags to compile and link")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -c -tWM- -w -w-par -w-inl -W -a1 -D_WIN32")
set(CMAKE_LINK_FLAGS "${CMAKE_LINK_FLAGS} c0w32.obj ")

include_directories(BEFORE "C:/BCC55/include" )

if(${CMAKE_BUILD_TYPE} MATCHES Debug)
    message("CMAKE Debug Build for Borland C/C++ 5.51")
	set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} -Od -DDEBUG -D_DEBUG")
	set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/binBC55/Debug")
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/binBC55/Debug")
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/binBC55/Debug")
#	set(CMAKE_EXE_LINKER_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS_DEBUG} -llibstdc++")	
elseif(${CMAKE_BUILD_TYPE} MATCHES Release)
    message("CMAKE Release Build for Borland C/C++ 5.51")
	set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} -O2 -DNDEBUG")
	set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/binBC55/Release")
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/binBC55/Release")
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/binBC55/Release")
#	set(CMAKE_EXE_LINKER_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS_DEBUG} -llibstdc++")	
endif()

file(GLOB SRC_FILES src/*.c src/*.rc)
# set(APPLI ${NAME_APPLI})

project(${NAME_APPLI}
        VERSION 1.0.0
        LANGUAGES C)
add_executable(${PROJECT_NAME} WIN32 ${SRC_FILES})

target_link_directories(${PROJECT_NAME} PUBLIC "C:/BCC55/lib" "C:/BCC55/lib/PSDK")
target_link_libraries(${PROJECT_NAME} PUBLIC "import32.lib" "glu32.lib" "opengl32.lib" "user32.lib" "advapi32.lib" "comdlg32.lib" "winmm.lib" "gdi32.lib" "shell32.lib" "kernel32.lib" "cw32.lib")
#-------------------------------------------------------------------------------------
